/* tslint:disable */
/* eslint-disable */
/**
 * El Aggregate BFF
 * Бэкенд для федеративного приложения
 *
 * The version of the OpenAPI document: 0.9.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { User } from './User'
import { UserFromJSON, UserFromJSONTyped, UserToJSON } from './User'

/**
 *
 * @export
 * @interface ModelFile
 */
export interface ModelFile {
    /**
     *
     * @type {Date}
     * @memberof ModelFile
     */
    createdAt?: Date
    /**
     *
     * @type {Date}
     * @memberof ModelFile
     */
    updatedAt?: Date
    /**
     *
     * @type {number}
     * @memberof ModelFile
     */
    id: number
    /**
     *
     * @type {string}
     * @memberof ModelFile
     */
    name: string
    /**
     *
     * @type {User}
     * @memberof ModelFile
     */
    user: User
    /**
     *
     * @type {string}
     * @memberof ModelFile
     */
    idx?: string
    /**
     *
     * @type {number}
     * @memberof ModelFile
     */
    revision: number
    /**
     *
     * @type {boolean}
     * @memberof ModelFile
     */
    isActive?: boolean
    /**
     *
     * @type {boolean}
     * @memberof ModelFile
     */
    isDeleted?: boolean
    /**
     *
     * @type {Date}
     * @memberof ModelFile
     */
    deletedAt?: Date
}

/**
 * Check if a given object implements the ModelFile interface.
 */
export function instanceOfModelFile(value: object): boolean {
    if (!('id' in value)) return false
    if (!('name' in value)) return false
    if (!('user' in value)) return false
    if (!('revision' in value)) return false
    return true
}

export function ModelFileFromJSON(json: any): ModelFile {
    return ModelFileFromJSONTyped(json, false)
}

export function ModelFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelFile {
    if (json == null) {
        return json
    }
    return {
        createdAt: json['createdAt'] == null ? undefined : new Date(json['createdAt']),
        updatedAt: json['updatedAt'] == null ? undefined : new Date(json['updatedAt']),
        id: json['id'],
        name: json['name'],
        user: UserFromJSON(json['user']),
        idx: json['idx'] == null ? undefined : json['idx'],
        revision: json['revision'],
        isActive: json['isActive'] == null ? undefined : json['isActive'],
        isDeleted: json['isDeleted'] == null ? undefined : json['isDeleted'],
        deletedAt: json['deletedAt'] == null ? undefined : new Date(json['deletedAt']),
    }
}

export function ModelFileToJSON(value?: ModelFile | null): any {
    if (value == null) {
        return value
    }
    return {
        createdAt: value['createdAt'] == null ? undefined : value['createdAt'].toISOString(),
        updatedAt: value['updatedAt'] == null ? undefined : value['updatedAt'].toISOString(),
        id: value['id'],
        name: value['name'],
        user: UserToJSON(value['user']),
        idx: value['idx'],
        revision: value['revision'],
        isActive: value['isActive'],
        isDeleted: value['isDeleted'],
        deletedAt: value['deletedAt'] == null ? undefined : (value['deletedAt'] as any).toISOString(),
    }
}
