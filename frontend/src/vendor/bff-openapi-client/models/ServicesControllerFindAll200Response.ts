/* tslint:disable */
/* eslint-disable */
/**
 * El Aggregate BFF
 * Бэкенд для федеративного приложения
 *
 * The version of the OpenAPI document: 0.9.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { PageMetaDto } from './PageMetaDto'
import { PageMetaDtoFromJSON, PageMetaDtoFromJSONTyped, PageMetaDtoToJSON } from './PageMetaDto'
import type { Service } from './Service'
import { ServiceFromJSON, ServiceFromJSONTyped, ServiceToJSON } from './Service'

/**
 *
 * @export
 * @interface ServicesControllerFindAll200Response
 */
export interface ServicesControllerFindAll200Response {
    /**
     *
     * @type {Array<Service>}
     * @memberof ServicesControllerFindAll200Response
     */
    data: Array<Service>
    /**
     *
     * @type {PageMetaDto}
     * @memberof ServicesControllerFindAll200Response
     */
    meta: PageMetaDto
}

/**
 * Check if a given object implements the ServicesControllerFindAll200Response interface.
 */
export function instanceOfServicesControllerFindAll200Response(value: object): boolean {
    if (!('data' in value)) return false
    if (!('meta' in value)) return false
    return true
}

export function ServicesControllerFindAll200ResponseFromJSON(json: any): ServicesControllerFindAll200Response {
    return ServicesControllerFindAll200ResponseFromJSONTyped(json, false)
}

export function ServicesControllerFindAll200ResponseFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean,
): ServicesControllerFindAll200Response {
    if (json == null) {
        return json
    }
    return {
        data: (json['data'] as Array<any>)?.map(ServiceFromJSON),
        meta: PageMetaDtoFromJSON(json['meta']),
    }
}

export function ServicesControllerFindAll200ResponseToJSON(value?: ServicesControllerFindAll200Response | null): any {
    if (value == null) {
        return value
    }
    return {
        data: (value['data'] as Array<any>)?.map(ServiceToJSON),
        meta: PageMetaDtoToJSON(value['meta']),
    }
}
